// ----
// Sass (v3.4.0)
// Compass (v1.0.0)
// ----

/**
 * http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/
 */
@function remove-nth($list, $index) {
  $result: null;

  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `remove-nth`.";
  } @else if $index == 0 {
    @warn "List index 0 must be a non-zero integer for `remove-nth`.";
  } @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
  } @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);

    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
  }

  @return $result;
}

/**
 * Searches a Sass map for the given key and/or set of keys
 *
 * @param   {map}     $map  The map to search in
 * @param   {mixed}   $keys The key(s) to search for
 * @return  {mixed}         The matched key or an empty value
 */
@function map-search($map, $keys) {
  $result: false;
  $keysType: type-of($keys);

  // First ensure an `map` was pasted as the first argument
  @if type-of($map) != map {
    @warn 'The given value `#{$map}` is not a valid map';
  }

    // Next ensure either a string or list was passed for `$keys`
  @else if $keysType != string and $keysType != list {
    @warn 'The given value `#{$keys}` is not a valid string and/or list';
  }

    // Continue on as everything seems in order
  @else {

    // If the length of the list is equal to `1` we now need to convert the list to a string
    @if length($keys) == 1 {
      $keys: nth($keys, 1);
      $keysType: string;
    }

    // Traverse through the map in search of the forbidden value we seek
    @each $key, $value in $map {
      @if $result == false {
        $isMap: type-of($value) == map;

        @if $keysType == string and not $isMap and $key == $keys {
          $result: $value;
        }

        @if ($keysType == list & & nth($keys, 1) == $key and $isMap) {
          $r: map-search($value, remove-nth($keys, 1));

          @if $r != false and $r != '' {
            $result: $r;
          }
        }
      }
    }

  }

  @return if($result != false, $result, '');
}
